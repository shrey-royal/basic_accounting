# Generated by Django 3.2.10 on 2024-05-23 07:19

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('place', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('st_no', models.CharField(max_length=20)),
                ('cst_no', models.CharField(max_length=20)),
                ('group', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_no', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.point')),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.quality')),
            ],
        ),
        migrations.CreateModel(
            name='Selected',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bundle', models.CharField(max_length=20)),
                ('size', models.CharField(max_length=100, unique=True)),
                ('grade', models.CharField(max_length=100)),
                ('sheet', models.CharField(max_length=20)),
                ('lot_no', models.CharField(max_length=20)),
                ('flag', models.CharField(max_length=50)),
                ('total_weight', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=20)),
                ('remarks', models.CharField(max_length=20)),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.point')),
                ('thickness', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.brand')),
                ('weight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.quality')),
            ],
        ),
        migrations.CreateModel(
            name='Packing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('lot_no', models.CharField(max_length=100)),
                ('lot_kgs', models.FloatField()),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.brand')),
                ('point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.point')),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.quality')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_no', models.CharField(blank=True, max_length=20)),
                ('organization_name', models.CharField(blank=True, max_length=100)),
                ('address', models.TextField(blank=True)),
                ('full_name', models.CharField(default='', max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bundle', models.CharField(max_length=100)),
                ('grade', models.CharField(max_length=100)),
                ('sizes', models.CharField(max_length=100)),
                ('sheet', models.CharField(max_length=100)),
                ('weight', models.CharField(max_length=100)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('bundle_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bundles', to='app.packing')),
            ],
        ),
    ]
